Ethercis Platform Installation
==============================

C.Chevalley, Ripple Foundation, 17.11.2017

How to install an EtherCIS platform (eg. ethercis server + postgresql DB).

Requirements
------------

Although EtherCIS can be installed on various O/S, we do recommend to deploy on CentOS 7 (or RHEL 7).
The following assumes, the target system has already CentOS 7 installed. To check your version, type the
following within a terminal (SSH):

#> cat /etc/*-release

For example:

CentOS Linux release 7.0.1406 (Core)
NAME="CentOS Linux"
VERSION="7 (Core)"
ID="centos"
ID_LIKE="rhel fedora"
VERSION_ID="7"
PRETTY_NAME="CentOS Linux 7 (Core)"
ANSI_COLOR="0;31"
CPE_NAME="cpe:/o:centos:centos:7"
HOME_URL="https://www.centos.org/"
BUG_REPORT_URL="https://bugs.centos.org/"

CentOS Linux release 7.0.1406 (Core)
CentOS Linux release 7.0.1406 (Core)

The installation process consists in 3 install scripts. If the full installation is performed, this will install:

o  ostgresql 10
o  openJDK 8
o  ethercis scripts (specific to a user; here ~ethercis)

NB. CentOS is a relatively strengthened Linux distribution, in particular, by default, the local firewall will
 block ethercis ports (REST API, JMX and JVM Debug if applicable), the install scripts will allow pass through
 on this ports if authorized during the installation

WARNING: this installation procedure is based on lousy security enforcement. It should not be used as is for
production particularly whenever private personal health data are used.

Installation Process
--------------------

1. Open a new terminal shell on the target system (login as root)
2. Go to a directory where you want to perform the installation from (f.e. /usr/local/src)

    #> cd /usr/local/src

3. get the release archive from GitHub (copy the link from GitHub)

    #>wget https://github.com/ethercis/ethercis/releases/download/v1.1.0-test/ethercis-install.tar.gz

4. extract the archive in the install directory

    #> tar xvfz ethercis-install.tar.gz

5. Install Postgresql 10 (this can take several minutes...)

    #>  ./install-db.sh

    This install script will install postgresql-10 on the system, compile and installl extensions required by ethercis
    (jsquery, temporal_tables), configure the DB under schema ethercis and preload the reference tables.

    The script prompt for enabling postgresql start at boot time (recommended)

    At the end of the install the following is displayed:

    Postgresql version 10 successfully deployed, EtherCIS DB configured

    At this stage, it is possible to check the installation with psql:

    #> su - postgres
    psql (10.1)
    Type "help" for help.

    postgres=# \l
                                      List of databases
       Name    |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges
    -----------+----------+----------+-------------+-------------+-----------------------
     ethercis  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/postgres         +
               |          |          |             |             | postgres=CTc/postgres+
               |          |          |             |             | ethercis=CTc/postgres
     postgres  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |
     template0 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
               |          |          |             |             | postgres=CTc/postgres
     template1 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
               |          |          |             |             | postgres=CTc/postgres
    (4 rows)
    ethercis=# \q
    -bash-4.2$ exit
    logout
    [root@localhost src]#

6. Enable trusted connection to postgresql on localhost

    By default, /var/lib/pgsql/${PG_VERSION}/data/pg_hba.conf sets local authentication to IDENT, this script will
    set it to 'trust'

     ./configure-postgresql.sh
    this script will setup a 'trust' setting on any connection on localhost (127.0.0.1)
    the resulting configuration modifies pg_hba.conf to default values
    WARNING: please do not use this configuration for a production system
    whenever going to production, access to postgresql should be controlled and audited
    Do you want to configure pg_hba.conf with default enabling ethercis to connect to the DB [N]? y
    found postgresql service:
      postgresql-10.service
      loaded active running
      PostgreSQL 10 database server
    Enter Postgresql version used on your platform: 10  <---- enter 10 for a standard installation
    configuration complete
    [root@localhost src]#

7. Install ethercis server

    #> ./ethercis-install.sh

    We recommend to use the default settings
    Make sure hostname is bound to the IP address (answer 'y' to "Do you want to update system with hostname and
     IP address you have specified")

8. run ethercis

    #> cd ~ethercis
    #> ./ecis-server start

    Check if the process is running

    #> jps -l
    19218 com.ethercis.vehr.Launcher


POST INSTALLATION
=================

1. Modifying ethercis launch script environment
ecis-server script uses a property file env.rc (located by default in ethercis home directory).
By default it contains the following:

export ECIS_HOME=/opt/ecis
export ECIS_PG_HOST=localhost
export ECIS_PG_PORT=5432
export ECIS_PG_SCHEMA=ethercis
export ECIS_PG_ID=postgres
export ECIS_PG_PWD=postgres
export ECIS_REST_HOSTNAME=192.168.2.119
export ECIS_REST_PORT=8080
export ECIS_NODE_NAME=ethercis.ripple.org
export JAVA_HOME=/usr/lib/jvm/java-openjdk

If needed these parameters can be modified with the following restriction:

changing node name involves changing /etc/hosts.

2. Wrong date/time on the system.

By default, CentOS uses chrony, please follow the instructions related to this service to synchronize the local time

3. Checking java version

EtherCIS uses java jre pointed to by $JAVA_HOME (>= 1.8). For example:

#> $JAVA_HOME/bin/java -version
openjdk version "1.8.0_151"
OpenJDK Runtime Environment (build 1.8.0_151-b12)
OpenJDK 64-Bit Server VM (build 25.151-b12, mixed mode)

Please modify the environment variable if you use another version of java (f.e. Oracle official distribution).

4. openEHR operational templates

By default, ethercis ships with a collection of precompiled operational templates to help getting started. These
templates are located by default in /etc/opt/ecis/knowledge/operational_templates.

TROUBLE SHOOTING
================

a. If ethercis process is running but does not respond to queries, check the firewall setting with:

# firewall-cmd --list-all
public (default, active)
  interfaces: enp0s3
  sources:
  services: dhcpv6-client ssh
  ports: 8080/tcp
  masquerade: no
  forward-ports:
  icmp-blocks:
  rich rules:

Port 8080 should be open at a minimum.

b. EtherCIS IP address is not bound to the right interface

The binding should be something similar to:

#> hostname
ethercis.ripple.org
#> hostname -i
192.168.2.119

That is ethercis will listen at ethercis.ripple.org:8080

c. The DB cannot be reached (error when performing queries)

Check postgresql service status:

#> systemctl status postgresql-10

if the status is unactive (dead) start the server:

#> systemctl start postgresql-10

And recheck the status (logs can be checked in /var/lib/pgsql/10/data/log
